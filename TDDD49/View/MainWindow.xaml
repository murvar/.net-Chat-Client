<Window x:Class="TDDD49.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TDDD49"
        xmlns:vm="clr-namespace:TDDD49.ViewModels"
        mc:Ignorable="d"
        Title="MainWindow" Height="461" Width="920">
    <Grid Margin="10">

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="6*"/>
            <ColumnDefinition Width="8*"/>
            <ColumnDefinition Width="4*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid.Resources>
            <vm:ViewModelClient x:Key="vmc"/>
            <BooleanToVisibilityConverter x:Key="TrueToVisibleConverter"/>

        </Grid.Resources>

        <StackPanel Grid.Row="1" Grid.Column="0" Margin="5,0,5,0"
                    DataContext="{Binding Source={StaticResource vmc}}">

            <Label>Name:</Label>
            <TextBox x:Name="txtName"
                     Text="{Binding Path=Name}"/>

            <Label>IP-Adress:</Label>
            <TextBox x:Name="txtIP"
                     Text="{Binding Path=Ip}"/>

            <Label>Port:</Label>
            <TextBox x:Name="txtPort"
                     Text="{Binding Path=Port}"/>

            <Button x:Name="btnAdd" 
                    Margin="0,5,0,0" 
                    Command="{Binding ClientFetchCommand, Source={StaticResource vmc}}">Initiate Chat</Button>

            <Label Grid.Row="0" Grid.Column="0" Visibility="{Binding Path=InformativeConnectBoxActive, Converter={StaticResource TrueToVisibleConverter}}">No connection was found!</Label>



            <Label>Listening Port:</Label>
            <TextBox x:Name="listenPort" 
                     Text="{Binding Path=ListeningPort, Mode=TwoWay}"/>

            <Button x:Name="btnListen" 
                    Margin="0,5,0,0" 
                    Command="{Binding ClientListenCommand, Source={StaticResource vmc}}">Start listening</Button>


            <Popup IsOpen = "{Binding Path=PopUpActive, Source={StaticResource vmc}, Mode=TwoWay}"   
                   PlacementTarget = "{Binding ElementName = btnListen}" 
                   Visibility="{Binding PopUpActive, Source={StaticResource vmc}, Converter={StaticResource TrueToVisibleConverter}, Mode=TwoWay}"
                    >


                <Grid Margin="10">

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="2*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <Grid.Resources>
                        <vm:ViewModelClient x:Key="vmc"/>
                    </Grid.Resources>

                    <Label Grid.Row="0" Grid.Column="0">Incoming connection</Label>
                    <Button x:Name="btnAcceptConnection" 
                        Grid.Column="0"
                        Grid.Row="1"
                        Margin="0,0,0,0" Command="{Binding AcceptConnectionCommand}" >Accept</Button>
                    <Button x:Name="btnDenyConnection"
                        Grid.Column="0"
                        Grid.Row="2"
                        Margin="0,0,0,0" Command="{Binding DenyConnectionCommand}" >Deny</Button>
                </Grid>

            </Popup>


        </StackPanel>

        <StackPanel Grid.Row="1" Grid.Column="1" Margin="5,0,0,0"
                    DataContext="{Binding Source={StaticResource vmc}}">

            <Label Grid.Column="1" Content="{Binding Path=ShowConnectionStatusMsg, Mode=TwoWay}"></Label>

            <Button x:Name="endConnection" 
                    Margin="0,5,0,0" 
                    Command="{Binding DisconnectConnectionCommand}">Terminate Connection</Button>

            <ListView DataContext="{Binding MessageList}" ItemsSource="{Binding}"
                  ScrollViewer.VerticalScrollBarVisibility="Visible"
                  ScrollViewer.CanContentScroll="False"
                  Height="200">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Border BorderBrush="Black" BorderThickness="2" CornerRadius="10">
                            <Grid Width="400"
                            Height="50" Background="Aqua">

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>

                                <TextBlock Grid.Row="0" Text="{Binding Sender}" VerticalAlignment="Center" Margin="20 0">
                                </TextBlock>
                                <TextBlock Grid.Row="1" Text="{Binding Time}" VerticalAlignment="Center" Margin="20 0">
                                </TextBlock>
                                <TextBlock Grid.Row="2" Text="{Binding Msg}" VerticalAlignment="Center" Margin="20 0">
                                </TextBlock>
                            </Grid>
                        </Border>
                    </DataTemplate>
                </ListView.ItemTemplate>

            </ListView>


            <TextBox x:Name="MsgBox"
                     Text="{Binding Path=MsgTxt}"/>

            <Button x:Name="SendMsg" 
                    Margin="0,5,0,0" 
                    Command="{Binding SendMessageCommand, Source={StaticResource vmc}}">Send Message</Button>

            <Button x:Name="SendBuzz" 
                    Margin="0,5,0,0" 
                    Command="{Binding BuzzCommand, Source={StaticResource vmc}}">Buzz</Button>



        </StackPanel>
        <Grid Grid.Row="2" Grid.Column="2" Margin="5,0,0,0"
                    DataContext="{Binding Source={StaticResource vmc}}">

            <Label>Search:</Label>
            <TextBox x:Name="filter"
                     Text="{Binding Path=Search}"/>


            <ListView DataContext="{Binding ConvoHistory}" ItemsSource="{Binding}"
                  ScrollViewer.VerticalScrollBarVisibility="Visible"
                  ScrollViewer.CanContentScroll="False"
                  Height="Auto">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Border BorderBrush="Black" BorderThickness="2" CornerRadius="10">
                            <Grid Width="100"
                            Height="40" Background="Aqua">

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>

                                <Button x:Name="ShowOldConvo" 
                                Margin="0,5,0,0" 
                                Command="{Binding ShowOldConversationCommand, Source={StaticResource vmc}}"
                                CommandParameter="{Binding ListOfMessages}" Background="Transparent" >

                                    <TextBlock Text="{Binding Name}"  Background="Transparent"></TextBlock>
                                </Button>
                                
                            </Grid>
                        </Border>
                    </DataTemplate>
                </ListView.ItemTemplate>

            </ListView>

        </Grid>

    </Grid>

</Window>
